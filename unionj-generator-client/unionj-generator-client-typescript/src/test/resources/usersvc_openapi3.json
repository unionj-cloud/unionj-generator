{
  "openapi": "3.0.2",
  "info": {
    "title": "Usersvc",
    "description": "Usersvc 用户管理服务\n调用用户详情、用户分页和上传头像接口需要带上Bearer Token请求头\n用户注册、用户登录和下载头像接口可以公开访问，无须鉴权\nUsersvc is user management service\nYou should set Bearer Token header when you request protected endpoints such as user detail, user pagination and upload avatar.\nYou can add doc for whole service here",
    "version": "v20220223"
  },
  "servers": [
    {
      "url": "http://localhost:6060"
    }
  ],
  "paths": {
    "/logout": {
      "get": {
        "description": "GetLogout 注销token\nGetLogout is used for revoking a token\nhttps://github.com/dgrijalva/jwt-go/issues/214",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLogoutResp"
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "description": "GetMe 获取当前登录用户详情接口\nGetMe is used for getting user info from token in header.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMeResp"
                }
              }
            }
          }
        }
      }
    },
    "/page/users": {
      "post": {
        "description": "PageUsers 用户分页接口\n展示如何定义POST请求且Content-Type为application/json的接口\nPageUsers is user pagination api\ndemo how to define post request api which accepts application/json content-type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageUsersResp"
                }
              }
            }
          }
        }
      }
    },
    "/public/download/avatar": {
      "get": {
        "description": "GetPublicDownloadAvatar 下载头像接口\n展示如何定义文件下载接口\n函数签名的出参里必须有且只有一个*os.File类型的参数\nGetPublicDownloadAvatar is avatar download api\ndemo how to define file download api\nNOTE: there must be one and at most one *os.File output parameter",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "用户ID\nuser id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "description": "用户ID\nuser id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": "文件二进制流\navatar file"
                }
              }
            }
          }
        }
      }
    },
    "/public/log/in": {
      "post": {
        "description": "PublicLogIn 用户登录接口\n展示如何鉴权并返回token\nPublicLogIn is user login api\ndemo how to do authentication and issue token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PublicLogInReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicLogInResp"
                }
              }
            }
          }
        }
      }
    },
    "/public/sign/up": {
      "post": {
        "description": "PublicSignUp 用户注册接口\n展示如何定义POST请求且Content-Type是application/x-www-form-urlencoded的接口\nPublicSignUp is user signup api\ndemo how to define post request api which accepts application/x-www-form-urlencoded content-type",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PublicSignUpReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicSignUpResp"
                }
              }
            }
          }
        }
      }
    },
    "/public/token/validate": {
      "post": {
        "description": "PublicTokenValidate token校验接口\n如果token有效，返回用户信息\nPublicTokenValidate validates token string\nif token is valid, return user information",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PublicTokenValidateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicTokenValidateResp"
                }
              }
            }
          }
        }
      }
    },
    "/upload/avatar": {
      "post": {
        "description": "UploadAvatar 上传头像接口\n展示如何定义文件上传接口\n函数签名的入参里必须要有至少一个[]*v3.FileModel或者*v3.FileModel类型的参数\nUploadAvatar is avatar upload api\ndemo how to define file upload api\nNOTE: there must be at least one []*v3.FileModel or *v3.FileModel input parameter",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadAvatarReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadAvatarResp"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "description": "GetUser 用户详情接口\n展示如何定义带查询字符串参数的GET请求接口\nGetUser is user detail api\ndemo how to define get http request with query string parameters",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "用户ID\nuser id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "description": "用户ID\nuser id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResp"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetLogoutResp": {
        "title": "GetLogoutResp",
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "成功返回OK\nreturn OK if success"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetMeResp": {
        "title": "GetMeResp",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UserVo"
          }
        },
        "required": [
          "data"
        ]
      },
      "GetUserResp": {
        "title": "GetUserResp",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UserVo"
          }
        },
        "required": [
          "data"
        ]
      },
      "Order": {
        "title": "Order",
        "type": "object",
        "properties": {
          "col": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          }
        },
        "required": [
          "col",
          "sort"
        ]
      },
      "Page": {
        "title": "Page",
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            },
            "description": "排序规则"
          },
          "pageNo": {
            "type": "integer",
            "format": "int32",
            "description": "页码"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页行数"
          }
        },
        "required": [
          "orders",
          "pageNo",
          "size"
        ]
      },
      "PageFilter": {
        "title": "PageFilter",
        "type": "object",
        "properties": {
          "dept": {
            "type": "string",
            "description": "所属部门"
          },
          "name": {
            "type": "string",
            "description": "真实姓名，前缀匹配"
          }
        },
        "required": [
          "name",
          "dept"
        ]
      },
      "PageQuery": {
        "title": "PageQuery",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/PageFilter"
          },
          "page": {
            "$ref": "#/components/schemas/Page"
          }
        },
        "description": "分页请求参数\npagination parameter\n分页筛选条件",
        "required": [
          "filter",
          "page"
        ]
      },
      "PageRet": {
        "title": "PageRet",
        "type": "object",
        "properties": {
          "hasNext": {
            "type": "boolean"
          },
          "items": {
            "type": "object"
          },
          "pageNo": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "分页结果\npagination result\n",
        "required": [
          "items",
          "pageNo",
          "pageSize",
          "total",
          "hasNext"
        ]
      },
      "PageUsersResp": {
        "title": "PageUsersResp",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageRet"
          }
        },
        "required": [
          "data"
        ]
      },
      "PublicLogInReq": {
        "title": "PublicLogInReq",
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "密码\npassword"
          },
          "username": {
            "type": "string",
            "description": "用户名\nusername"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "PublicLogInResp": {
        "title": "PublicLogInResp",
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "token"
          }
        },
        "required": [
          "data"
        ]
      },
      "PublicSignUpReq": {
        "title": "PublicSignUpReq",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "图形验证码\nimage code"
          },
          "password": {
            "type": "string",
            "description": "密码\npassword"
          },
          "username": {
            "type": "string",
            "description": "用户名\nusername"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "PublicSignUpResp": {
        "title": "PublicSignUpResp",
        "type": "object",
        "properties": {
          "data": {
            "type": "integer",
            "format": "int32",
            "description": "成功返回用户ID\nreturn user ID if success"
          }
        },
        "required": [
          "data"
        ]
      },
      "PublicTokenValidateReq": {
        "title": "PublicTokenValidateReq",
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "PublicTokenValidateResp": {
        "title": "PublicTokenValidateResp",
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserVo"
          }
        },
        "required": [
          "user"
        ]
      },
      "UploadAvatarReq": {
        "title": "UploadAvatarReq",
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "用户头像\nuser avatar"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "avatar",
          "id"
        ]
      },
      "UploadAvatarResp": {
        "title": "UploadAvatarResp",
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "成功返回OK\nreturn OK if success"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserVo": {
        "title": "UserVo",
        "type": "object",
        "properties": {
          "dept": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "description": "\n用户详情\nuser detail\n用户详情\nuser detail\n",
        "required": [
          "id",
          "username",
          "name",
          "phone",
          "dept"
        ]
      }
    }
  }
}