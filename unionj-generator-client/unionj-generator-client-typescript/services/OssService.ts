/**
* Generated by unionj-generator.
* Don't edit!
*
* @module Attachment
*/
import { CreateAxiosOptions } from "pullcode/src/httputil/axiosTransform";
import BizService from "./BizService";
import type {
  ResultDTOString,
} from "./types"

export class OssService extends BizService{

  constructor(options?: Partial<CreateAxiosOptions>) {
    super(options);
  }

  /**
  * POST /oss/upload
  *
  * 上传附件
  * @param formData 
  * @param returnKey 
  * @returns Promise<ResultDTOString> 
  */
  postOssUpload(
    formData: FormData,
    params: {
      returnKey?: boolean,
    },
  ) :Promise<ResultDTOString> {
    return this.getAxios().post(`/oss/upload`,
          formData,
          {
            params: {
              returnKey: params.returnKey,
            },
          }
        )
  }

  /**
  * GET /oss/get
  *
  * 获取附件
  * @param key 
  * @param style 
  * @returns Promise<any> 
  */
  getOssGet(
    params: {
      key: string,
      style?: string,
    },
  ) :Promise<any> {
    return this.getAxios().get(`/oss/get`,
          {
            params: {
              key: params.key,
              style: params.style,
            },
            responseType: 'blob',
          }
        )
  }

}

export default OssService;
  
export function createOssService(opt?: Partial<CreateAxiosOptions>) {
  return new OssService(opt);
}

export const ossService = createOssService();

